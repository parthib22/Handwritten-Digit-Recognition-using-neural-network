# -*- coding: utf-8 -*-
"""Handwritten Digit Recognition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x4K79SHUGkHr7ho7fjZxl-5EM3i-koFX
"""

# from google.colab import drive
# drive.mount('/content/drive')

import os
import cv2
import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf

mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()

x_train = tf.keras.utils.normalize(x_train, axis=1)
x_test = tf.keras.utils.normalize(x_test, axis=1)

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Reshape((28, 28, 1), input_shape=(None, None)))
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128, activation="relu"))
model.add(tf.keras.layers.Dense(128, activation="relu"))
model.add(tf.keras.layers.Dense(10, activation="softmax"))

model.compile(
    optimizer="adam", loss="sparse_categorical_crossentropy", metrics=["accuracy"]
)

model.reset_states()

model.fit(x_train, y_train, epochs=3)

model.save("handwritten.model")

# start here next time
model = tf.keras.models.load_model("handwritten.model")

# opt
# loss, accuracy = model.evaluate(x_test, y_test)

# opt
# print(loss)
# print(accuracy)

image_number = 0
count = 0
datas = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
files = os.listdir(f"digits")
while os.path.isfile(f"digits/{image_number}.png"):
    try:
        img = cv2.imread(f"digits/{image_number}.png")[:, :, 0]
        img = np.invert(np.array([img]))
        prediction = model.predict(img)
        print(
            f"A handwritten {datas[image_number]} is probably a {np.argmax(prediction)}"
        )
        # plt.imshow(img[0], cmap=plt.cm.binary)
        # plt.show()
    except:
        print("Error!")
    finally:
        if np.argmax(prediction) == datas[image_number]:
            count += 1
        image_number += 1
print(f"Manual test model accuracy: {int(count/len(files)*100)}%")
